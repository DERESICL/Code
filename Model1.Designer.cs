//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model", "OwnerHolidayhome", "Owner", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Easybook.Models.Owner), "Holidayhome", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Easybook.Models.Holidayhome))]
[assembly: EdmRelationshipAttribute("Model", "AvailabilityHolidayhome", "Availability", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Easybook.Models.Availability), "Holidayhome", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Easybook.Models.Holidayhome))]

#endregion

namespace Easybook.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Owner> Owners
        {
            get
            {
                if ((_Owners == null))
                {
                    _Owners = base.CreateObjectSet<Owner>("Owners");
                }
                return _Owners;
            }
        }
        private ObjectSet<Owner> _Owners;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Confirmation> Confirmations
        {
            get
            {
                if ((_Confirmations == null))
                {
                    _Confirmations = base.CreateObjectSet<Confirmation>("Confirmations");
                }
                return _Confirmations;
            }
        }
        private ObjectSet<Confirmation> _Confirmations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Availability> Availabilities
        {
            get
            {
                if ((_Availabilities == null))
                {
                    _Availabilities = base.CreateObjectSet<Availability>("Availabilities");
                }
                return _Availabilities;
            }
        }
        private ObjectSet<Availability> _Availabilities;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Owners EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOwners(Owner owner)
        {
            base.AddObject("Owners", owner);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Confirmations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConfirmations(Confirmation confirmation)
        {
            base.AddObject("Confirmations", confirmation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Availabilities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAvailabilities(Availability availability)
        {
            base.AddObject("Availabilities", availability);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Availability")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Availability : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Availability object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Availability CreateAvailability(global::System.Int32 id)
        {
            Availability availability = new Availability();
            availability.Id = id;
            return availability;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "AvailabilityHolidayhome", "Holidayhome")]
        public EntityCollection<Holidayhome> Holidayhomes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Holidayhome>("Model.AvailabilityHolidayhome", "Holidayhome");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Holidayhome>("Model.AvailabilityHolidayhome", "Holidayhome", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Booking")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Holidayhome))]
    [KnownTypeAttribute(typeof(Customer))]
    [KnownTypeAttribute(typeof(Payment))]
    public partial class Booking : Confirmation
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Booking object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="bookingID">Initial value of the BookingID property.</param>
        public static Booking CreateBooking(global::System.Int32 id, global::System.Int32 bookingID)
        {
            Booking booking = new Booking();
            booking.Id = id;
            booking.BookingID = bookingID;
            return booking;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookingID
        {
            get
            {
                return _BookingID;
            }
            set
            {
                OnBookingIDChanging(value);
                ReportPropertyChanging("BookingID");
                _BookingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookingID");
                OnBookingIDChanged();
            }
        }
        private global::System.Int32 _BookingID;
        partial void OnBookingIDChanging(global::System.Int32 value);
        partial void OnBookingIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Confirmation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Booking))]
    public partial class Confirmation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Confirmation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Confirmation CreateConfirmation(global::System.Int32 id)
        {
            Confirmation confirmation = new Confirmation();
            confirmation.Id = id;
            return confirmation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : Booking
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="bookingID">Initial value of the BookingID property.</param>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        public static Customer CreateCustomer(global::System.Int32 id, global::System.Int32 bookingID, global::System.Int32 customerID)
        {
            Customer customer = new Customer();
            customer.Id = id;
            customer.BookingID = bookingID;
            customer.CustomerID = customerID;
            return customer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private global::System.Int32 _CustomerID;
        partial void OnCustomerIDChanging(global::System.Int32 value);
        partial void OnCustomerIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Holidayhome")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Holidayhome : Booking
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Holidayhome object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="bookingID">Initial value of the BookingID property.</param>
        /// <param name="holidayhomeID">Initial value of the HolidayhomeID property.</param>
        public static Holidayhome CreateHolidayhome(global::System.Int32 id, global::System.Int32 bookingID, global::System.Int32 holidayhomeID)
        {
            Holidayhome holidayhome = new Holidayhome();
            holidayhome.Id = id;
            holidayhome.BookingID = bookingID;
            holidayhome.HolidayhomeID = holidayhomeID;
            return holidayhome;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HolidayhomeID
        {
            get
            {
                return _HolidayhomeID;
            }
            set
            {
                OnHolidayhomeIDChanging(value);
                ReportPropertyChanging("HolidayhomeID");
                _HolidayhomeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HolidayhomeID");
                OnHolidayhomeIDChanged();
            }
        }
        private global::System.Int32 _HolidayhomeID;
        partial void OnHolidayhomeIDChanging(global::System.Int32 value);
        partial void OnHolidayhomeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "OwnerHolidayhome", "Owner")]
        public Owner Owner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Owner>("Model.OwnerHolidayhome", "Owner").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Owner>("Model.OwnerHolidayhome", "Owner").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Owner> OwnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Owner>("Model.OwnerHolidayhome", "Owner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Owner>("Model.OwnerHolidayhome", "Owner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "AvailabilityHolidayhome", "Availability")]
        public Availability Availability
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Availability>("Model.AvailabilityHolidayhome", "Availability").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Availability>("Model.AvailabilityHolidayhome", "Availability").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Availability> AvailabilityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Availability>("Model.AvailabilityHolidayhome", "Availability");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Availability>("Model.AvailabilityHolidayhome", "Availability", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Owner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Owner : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Owner object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Owner CreateOwner(global::System.Int32 id)
        {
            Owner owner = new Owner();
            owner.Id = id;
            return owner;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "OwnerHolidayhome", "Holidayhome")]
        public EntityCollection<Holidayhome> Holidayhomes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Holidayhome>("Model.OwnerHolidayhome", "Holidayhome");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Holidayhome>("Model.OwnerHolidayhome", "Holidayhome", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Payment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Payment : Booking
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Payment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="bookingID">Initial value of the BookingID property.</param>
        /// <param name="bookingId">Initial value of the BookingId property.</param>
        public static Payment CreatePayment(global::System.Int32 id, global::System.Int32 bookingID, global::System.Int32 bookingId)
        {
            Payment payment = new Payment();
            payment.Id = id;
            payment.BookingID = bookingID;
            payment.BookingId = bookingId;
            return payment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookingId
        {
            get
            {
                return _BookingId;
            }
            set
            {
                OnBookingIdChanging(value);
                ReportPropertyChanging("BookingId");
                _BookingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookingId");
                OnBookingIdChanged();
            }
        }
        private global::System.Int32 _BookingId;
        partial void OnBookingIdChanging(global::System.Int32 value);
        partial void OnBookingIdChanged();

        #endregion
    
    }

    #endregion
    
}
